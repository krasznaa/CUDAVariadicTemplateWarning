
# Name for this "action".
name: Build Tests

# Perform the builds on every push and pull request.
on: [ push, pull_request ]

# All the different build/test jobs.
jobs:

  # Containerised build jobs.
  container:

    # The different build modes (containers) to test.
    strategy:
      matrix:
        CONTAINER: [ "nvidia/cuda:10.2-devel-ubuntu18.04",
                     "nvidia/cuda:11.0.3-devel-ubuntu18.04",
                     "nvidia/cuda:11.1.1-devel-ubuntu18.04",
                     "nvidia/cuda:11.2.2-devel-ubuntu18.04",
                     "nvidia/cuda:11.3.1-devel-ubuntu18.04",
                     "nvidia/cuda:11.4.2-devel-ubuntu18.04" ]

    # The system to run on.
    runs-on: ubuntu-latest
    container: ${{ matrix.CONTAINER }}

    # Use BASH as the shell from the image.
    defaults:
      run:
        shell: bash

    # The build/test steps to execute.
    steps:
    # Use a standard checkout of the code.
    - uses: actions/checkout@v2
    # Install CMake 3.21.4.
    - name: CMake Setup
      run: |
        apt-get update
        apt-get install -y wget
        wget https://cmake.org/files/v3.21/cmake-3.21.4-linux-x86_64.tar.gz
        tar -C /usr/local --strip-components=1 --no-same-owner -xvf cmake-3.21.4-linux-x86_64.tar.gz
    # Run the CMake configuration.
    - name: Configure
      run: |
        export CUDAFLAGS="-Werror all-warnings"
        cmake -DCMAKE_BUILD_TYPE=Debug -S ${GITHUB_WORKSPACE} -B build
    # Perform the build.
    - name: Build
      run: cmake --build build
      continue-on-error: true
